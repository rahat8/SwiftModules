import UIKit

class Utility {
    // MARK: - Date Formatting
    static func formatDate(_ date: Date, format: String) -> String {
        let formatter = DateFormatter()
        formatter.dateFormat = format
        return formatter.string(from: date)
    }

    // MARK: - String Manipulation
    static func capitalizeFirstLetter(_ text: String) -> String {
        return text.prefix(1).capitalized + text.dropFirst()
    }

    // MARK: - Validation
    static func isValidEmail(_ email: String) -> Bool {
        let emailRegex = "[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}"
        let emailPredicate = NSPredicate(format: "SELF MATCHES %@", emailRegex)
        return emailPredicate.evaluate(with: email)
    }

    static func isValidPassword(_ password: String) -> Bool {
        // Add your password validation logic here (e.g., minimum length, requirements)
        return password.count >= 8 // Example: Minimum 8 characters
    }

    // MARK: - Alert Utility
    static func showAlert(title: String, message: String, viewController: UIViewController) {
        let alert = UIAlertController(title: title, message: message, preferredStyle: .alert)
        alert.addAction(UIAlertAction(title: "OK", style: .default, handler: nil))
        viewController.present(alert, animated: true, completion: nil)
    }

    // MARK: - Image Utility
    static func resizeImage(image: UIImage, targetSize: CGSize) -> UIImage {
        let renderer = UIGraphicsImageRenderer(size: targetSize)
        return renderer.image { _ in
            image.draw(in: CGRect(origin: .zero, size: targetSize))
        }
    }

    // MARK: - Network Utility
    static func isConnectedToNetwork() -> Bool {
        return Reachability()?.connection != .none
    }

    // MARK: - Device Utility
    static func isiPad() -> Bool {
        return UIDevice.current.userInterfaceIdiom == .pad
    }

    // MARK: - Navigation Utility
    static func pushViewController(_ viewController: UIViewController, from sourceViewController: UIViewController) {
        sourceViewController.navigationController?.pushViewController(viewController, animated: true)
    }

    static func popViewController(_ viewController: UIViewController) {
        viewController.navigationController?.popViewController(animated: true)
    }

    static func presentViewController(_ viewController: UIViewController, from sourceViewController: UIViewController) {
        sourceViewController.present(viewController, animated: true, completion: nil)
    }

    static func dismissViewController(_ viewController: UIViewController) {
        viewController.dismiss(animated: true, completion: nil)
    }

    // Add more utility functions as needed
}
